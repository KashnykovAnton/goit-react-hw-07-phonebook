{"version":3,"sources":["components/Section.js","redux/contacts/contacts-selectors.js","redux/contacts/contacts-actions.js","redux/contacts/contacts-operations.js","components/ContactListItem.js","components/ContactList.js","components/ContactForm.js","components/Filter.js","App.js","redux/contacts/contacts-reducers.js","redux/store.js","index.js"],"names":["Section","title","children","getContacts","state","contacts","getFilter","filter","getLoader","loading","fetchContactRequest","createAction","fetchContactSuccess","fetchContactError","addContactRequest","addContactSuccess","addContactError","deleteContactRequest","deleteContactSuccess","deleteContactError","filterContactRequest","filterContactSuccess","filterContactError","BASE_URL","fetchContact","dispatch","a","axios","get","data","ContactList","id","name","number","useDispatch","onDelete","console","log","delete","then","catch","error","deleteContact","type","onClick","useSelector","loader","useEffect","filteredContacts","useMemo","normalizedFilter","toLowerCase","contact","includes","map","connect","useState","setName","setNumber","handleChange","e","target","value","formSubmitHandler","item","normalizedName","find","el","alert","post","addContact","nameId","uuidv4","telId","onSubmit","preventDefault","htmlFor","pattern","required","onChange","Component","changeFilter","useCallback","App","createReducer","_","action","payload","contactReducer","combineReducers","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","logger","store","configureStore","reducer","devTools","process","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.aa5f10de.chunk.js","sourcesContent":["export default function Section({ title, children }) {\n  return (\n    <section>\n      <h2>{title}</h2>\n      {children}\n    </section>\n  );\n}\n","export const getContacts = state => state.contacts;\nexport const getFilter = state => state.filter;\nexport const getLoader = state => state.loading;\n","import { createAction } from '@reduxjs/toolkit';\n\nexport const fetchContactRequest = createAction('contacts/fetchContactRequest');\nexport const fetchContactSuccess = createAction('contacts/fetchContactSuccess');\nexport const fetchContactError = createAction('contacts/fetchContactError');\n\nexport const addContactRequest = createAction('contacts/addContactRequest');\nexport const addContactSuccess = createAction('contacts/addContactSuccess');\nexport const addContactError = createAction('contacts/addContactError');\n\nexport const deleteContactRequest = createAction(\n  'contacts/deleteContactRequest',\n);\nexport const deleteContactSuccess = createAction(\n  'contacts/deleteContactSuccess',\n);\nexport const deleteContactError = createAction('contacts/deleteContactError');\n\nexport const filterContactRequest = createAction(\n  'contacts/filterContactRequest',\n);\nexport const filterContactSuccess = createAction(\n  'contacts/filterContactSuccess',\n);\nexport const filterContactError = createAction('contacts/filterContactError');\n","import axios from 'axios';\nimport {\n  addContactRequest,\n  addContactSuccess,\n  addContactError,\n  deleteContactRequest,\n  deleteContactSuccess,\n  deleteContactError,\n  filterContactRequest,\n  filterContactSuccess,\n  filterContactError,\n  fetchContactRequest,\n  fetchContactSuccess,\n  fetchContactError,\n} from './contacts-actions';\n\nconst BASE_URL = 'https://6196d384af46280017e7e2d4.mockapi.io/contacts';\n\n// --- OLD FORMAT ---\n// export const fetchContact = () => dispatch => {\n//   dispatch(fetchContactRequest());\n//   axios\n//     .get('https://6196d384af46280017e7e2d4.mockapi.io/contacts')\n//     .then(({ data }) => {\n//       console.log('data in fetchContact: ', data);\n//       dispatch(fetchContactSuccess(data));\n//     })\n//     .catch(error => dispatch(fetchContactError(error)));\n// };\n\n// --- ASYNC-AWAIT FORMAT ---\nexport const fetchContact = () => async dispatch => {\n  dispatch(fetchContactRequest());\n  try {\n    const { data } = await axios.get(`${BASE_URL}`);\n    dispatch(fetchContactSuccess(data));\n  } catch (error) {\n    dispatch(fetchContactError(error));\n  }\n};\n\nexport const addContact = item => dispatch => {\n  dispatch(addContactRequest());\n  console.log('item: ', item);\n  axios\n    .post(`${BASE_URL}`, item)\n    .then(({ data }) => {\n      console.log('data: ', data);\n      dispatch(addContactSuccess(data));\n    })\n    .catch(error => dispatch(addContactError(error)));\n};\n\nexport const deleteContact = id => dispatch => {\n  dispatch(deleteContactRequest());\n  console.log('id: ', id);\n  axios\n    .delete(`${BASE_URL}/${id}`)\n    .then(() => dispatch(deleteContactSuccess(id)))\n    .catch(error => dispatch(deleteContactError(error)));\n};\n\nexport const filterContact = name => dispatch => {\n  dispatch(filterContactRequest());\n  console.log('name: ', name);\n  axios\n    .get(`${BASE_URL}`)\n    .then(() => dispatch(filterContactSuccess(name)))\n    .catch(error => dispatch(filterContactError(error)));\n};\n","import { useDispatch } from 'react-redux';\nimport { deleteContact } from '../redux/contacts/contacts-operations';\n\nexport default function ContactList({ id, name, number }) {\n  const dispatch = useDispatch();\n\n  const onDelete = id => dispatch(deleteContact(id));\n\n  return (\n    <li>\n      <span>{name}:</span>\n      <span>{number}</span>\n      <button\n        type=\"button\"\n        id={id}\n        onClick={() => {\n          onDelete(id);\n        }}\n      >\n        Delete\n      </button>\n    </li>\n  );\n}\n","import { useEffect, useMemo } from 'react';\nimport { useSelector } from 'react-redux';\nimport {\n  getContacts,\n  getFilter,\n  getLoader,\n} from '../redux/contacts/contacts-selectors';\nimport { fetchContact } from '../redux/contacts/contacts-operations';\nimport ContactListItem from './ContactListItem';\n\nexport default function ContactList() {\n  const contacts = useSelector(getContacts);\n  const filter = useSelector(getFilter);\n  const loader = useSelector(getLoader);\n\n  useEffect(() => {\n    return fetchContact();\n  }, []);\n\n  const filteredContacts = useMemo(() => {\n    const normalizedFilter = filter.toLowerCase();\n    return contacts.filter(contact =>\n      contact.name.toLowerCase().includes(normalizedFilter),\n    );\n  }, [filter, contacts]);\n\n  return (\n    <>\n      {loader && <h1>Loading...</h1>}\n      <ul>\n        {!loader &&\n          filteredContacts.map(({ id, name, number }) => (\n            <ContactListItem key={id} id={id} name={name} number={number} />\n          ))}\n      </ul>\n    </>\n  );\n}\n","import { useState, useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { v4 as uuidv4 } from 'uuid';\nimport { getContacts } from '../redux/contacts/contacts-selectors';\nimport {\n  fetchContact,\n  addContact,\n} from '../redux/contacts/contacts-operations';\n\nimport { connect } from 'react-redux';\n\nfunction ContactForm({ fetchContact }) {\n  // export default function ContactForm() {\n  const contacts = useSelector(getContacts);\n  const dispatch = useDispatch();\n\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n\n  useEffect(() => {\n    return fetchContact();\n  }, [fetchContact]);\n\n  const handleChange = e => {\n    const { name, value } = e.target;\n\n    switch (name) {\n      case 'name':\n        setName(value);\n        break;\n\n      case 'number':\n        setNumber(value);\n        break;\n\n      default:\n        return;\n    }\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    formSubmitHandler({ name, number });\n    setName('');\n    setNumber('');\n  };\n\n  const formSubmitHandler = item => {\n    const normalizedName = item.name.toLowerCase();\n    contacts.find(el => {\n      return el.name.toLowerCase() === normalizedName;\n    })\n      ? alert(`${item.name} is already in contacts`)\n      : dispatch(addContact(item));\n  };\n\n  const nameId = uuidv4();\n  const telId = uuidv4();\n  return (\n    <form onSubmit={handleSubmit}>\n      <label htmlFor={nameId}>Name</label>\n      <input\n        type=\"text\"\n        name=\"name\"\n        pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n        title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n        required\n        value={name}\n        id={nameId}\n        onChange={handleChange}\n      />\n      <label htmlFor={telId}>Number</label>\n      <input\n        type=\"tel\"\n        name=\"number\"\n        pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n        title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\n        required\n        value={number}\n        id={telId}\n        onChange={handleChange}\n      />\n      <button type=\"submit\">Add contact</button>\n    </form>\n  );\n}\n\nconst mapDispatchToProps = dispatch => ({\n  fetchContact: () => dispatch(fetchContact()),\n});\n\nexport default connect(null, mapDispatchToProps)(ContactForm);\n\nContactForm.propTypes = {\n  state: PropTypes.objectOf(PropTypes.string),\n};\n","import { v4 as uuidv4 } from 'uuid';\nimport { useCallback } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { getFilter } from '../redux/contacts/contacts-selectors';\nimport { filterContact } from '../redux/contacts/contacts-operations';\n\nexport default function Component() {\n  const filter = useSelector(getFilter);\n  const dispatch = useDispatch();\n  const changeFilter = useCallback(\n    e => {\n      dispatch(filterContact(e.target.value));\n    },\n    [dispatch],\n  );\n\n  return (\n    <div>\n      <label htmlFor={uuidv4()}>Find contacts by name</label>\n      <input type=\"text\" value={filter} id={uuidv4()} onChange={changeFilter} />\n    </div>\n  );\n}\n","import './App.css';\nimport Section from './components/Section';\nimport ContactList from './components/ContactList';\nimport ContactForm from './components/ContactForm';\nimport Filter from './components/Filter';\n\nexport default function App() {\n  return (\n    <div>\n      <Section title=\"Phonebook\">\n        <ContactForm />\n      </Section>\n      <Section title=\"Contacts\">\n        <Filter />\n        <ContactList />\n      </Section>\n    </div>\n  );\n}\n","import { combineReducers } from 'redux';\nimport { createReducer } from '@reduxjs/toolkit';\nimport {\n  fetchContactRequest,\n  fetchContactSuccess,\n  fetchContactError,\n  addContactRequest,\n  addContactSuccess,\n  addContactError,\n  deleteContactRequest,\n  deleteContactSuccess,\n  deleteContactError,\n  filterContactRequest,\n  filterContactSuccess,\n  filterContactError,\n} from './contacts-actions';\n\nconst contacts = createReducer([], {\n  [fetchContactSuccess]: (_, action) => action.payload,\n  [addContactSuccess]: (state, action) => [...state, action.payload],\n  [deleteContactSuccess]: (state, action) =>\n    state.filter(contact => contact.id !== action.payload),\n});\n\nconst filter = createReducer('', {\n  [filterContactSuccess]: (_, action) => action.payload,\n});\n\nconst loading = createReducer(false, {\n  [fetchContactRequest]: () => true,\n  [fetchContactSuccess]: () => false,\n  [fetchContactError]: () => false,\n  [addContactRequest]: () => true,\n  [addContactSuccess]: () => false,\n  [addContactError]: () => false,\n  [deleteContactRequest]: () => true,\n  [deleteContactSuccess]: () => false,\n  [deleteContactError]: () => false,\n  [filterContactRequest]: () => true,\n  [filterContactSuccess]: () => false,\n  [filterContactError]: () => false,\n});\n\nconst error = createReducer(null, {\n  [fetchContactError]: (_, action) => action.payload,\n  [addContactError]: (_, action) => action.payload,\n  [deleteContactError]: (_, action) => action.payload,\n  [filterContactError]: (_, action) => action.payload,\n});\n\nexport const contactReducer = combineReducers({\n  contacts,\n  filter,\n  loading,\n  error,\n});\n","import { configureStore, getDefaultMiddleware } from '@reduxjs/toolkit';\nimport { contactReducer } from './contacts/contacts-reducers';\nimport {\n  FLUSH,\n  REHYDRATE,\n  PAUSE,\n  PERSIST,\n  PURGE,\n  REGISTER,\n} from 'redux-persist';\nimport logger from 'redux-logger';\n\n//  --- EXAMPLE WITH CUSTOM MIDLEWARE ---\n// const myMiddleware = store => next => action => {\n//   console.log('My midleware!', action);\n//   next(action);\n// };\n\nconst middleware = [\n  ...getDefaultMiddleware({\n    serializableCheck: {\n      ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\n    },\n  }),\n  // myMiddleware,\n  logger,\n];\n\nexport const store = configureStore({\n  reducer: contactReducer,\n  middleware,\n  devTools: process.env.NODE_ENV === 'development',\n});\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport 'modern-normalize/modern-normalize.css';\nimport './index.css';\nimport App from './App';\nimport { store } from './redux/store';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}